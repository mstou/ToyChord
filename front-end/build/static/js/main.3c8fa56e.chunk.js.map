{"version":3,"sources":["components/constants.js","components/Depart/Depart.js","components/Insert/Insert.js","components/Query/Query.js","components/Log/LogNode.js","components/Log/Log.js","components/Delete/Delete.js","components/Info/Info.js","components/Topology/Topology.js","components/PieChart/PieChart.js","App.js","reportWebVitals.js","index.js"],"names":["base_url","Depart","props","state","selectedNode","handleChange","bind","handleSubmit","event","this","setState","target","value","url","fetch","then","res","console","log","catch","exc","preventDefault","nodes","map","n","me","ip","port","className","onSubmit","onChange","node","type","React","Component","Insert","key","onKeyChange","onValueChange","onNodeChange","Query","printAll","files","handleClear","json","data","Object","values","file","ind","length","f","name","onClick","Node","replicas","r","keys","k","replica","Log","index","split","findIndex","parseInt","Delete","Info","K","consistency","Topology","theta","Math","PI","setup","p5","canvasParentRef","createCanvas","parent","draw","background","circle","sizeX","sizeY","angle","i","x","D","sin","y","cos","text","textAlign","CENTER","textSize","handleReload","PieChart","labels","percentages","id","BigInt","label","sort","a","b","total","push","layout","width","height","paper_bgcolor","LeftHalf","RightHalf","fetchInfo","fetchNodes","next","bootstrap","cnt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c8fa56e.chunk.js","sourcesContent":["const base_url = '83.212.72.167:5000';\n\nexport { base_url };\n","import React from 'react';\nimport { base_url } from '../constants';\n\nclass Depart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedNode: base_url};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({selectedNode: event.target.value});\n  }\n\n  handleSubmit(event) {\n    const url = `http://${this.state.selectedNode}/depart`;\n    if (this.state.selectedNode !== base_url) {\n      fetch(url)\n      .then(res => console.log(res))\n      .catch(exc => console.log(exc))\n    }\n    else {\n      console.log('Cannot depart bootstrap node.');\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    const nodes = this.props.nodes.map(n => `${n.me.ip}:${n.me.port}`);\n    return (\n      <div className='p-3'>\n        <h2>Depart</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-group'>\n            <label>Select node</label>\n            <br/>\n            <select value={this.state.value} onChange={this.handleChange}>\n            {nodes.map(node => (\n              <option key={node} value={node}>\n                {node}\n              </option>\n            ))}\n            </select>\n          </div>\n          <input className='btn btn-primary' type=\"submit\" value=\"Depart\" />\n        </form>\n      </div>\n    )}\n}\n\nexport default Depart;\n","import React from 'react';\nimport { base_url } from '../constants';\n\nclass Insert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      value: '',\n      node: base_url,\n    };\n\n    this.onKeyChange = this.onKeyChange.bind(this);\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onNodeChange = this.onNodeChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onKeyChange(event) {\n    this.setState({key: event.target.value});\n  }\n\n  onValueChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  onNodeChange(event) {\n    this.setState({node: event.target.value});\n  }\n\n  handleSubmit(event) {\n    const url = `http://${this.state.node}/insert?key=${this.state.key}&value=${this.state.value}`;\n    console.log(url);\n    fetch(url)\n    .then(res => console.log(res))\n    .catch(exc => console.log(exc))\n    event.preventDefault();\n  }\n\n  render() {\n    const nodes = this.props.nodes.map(n => `${n.me.ip}:${n.me.port}`);\n    return (\n      <div className='p-3'>\n        <h2>Insert</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-group'>\n            <label>Key</label>\n            <br/>\n            <input type=\"text\" value={this.state.key} onChange={this.onKeyChange} />\n            <br/>\n            <label>Value</label>\n            <br/>\n            <input type=\"text\" value={this.state.value} onChange={this.onValueChange} />\n            <br/>\n            <label>Node</label>\n            <br/>\n            <select value={this.state.node} onChange={this.onNodeChange}>\n              {nodes.map(node => (\n                <option key={node} value={node}>\n                  {node}\n                </option>\n              ))}\n            </select>\n            <br/>\n          </div>\n          <input className='btn btn-primary' type=\"submit\" value=\"Insert\" />\n        </form>\n      </div>\n    );\n  }\n\n}\nexport default Insert;\n","import React from 'react';\nimport { base_url } from '../constants';\n\nclass Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nodes = props.nodes.map(n => `${n.me.ip}:${n.me.port}`);\n\n    this.state = {\n      key: '',\n      node: base_url,\n      value: '',\n      printAll: false,\n      files: []\n    };\n\n    this.onKeyChange = this.onKeyChange.bind(this);\n    this.onNodeChange = this.onNodeChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  onKeyChange(event) {\n    this.setState({key: event.target.value});\n  }\n\n  onNodeChange(event) {\n    this.setState({\n      node: event.target.value,\n      value: '',\n      files: [],\n      printAll: false\n    });\n  }\n\n  handleClear(event) {\n      this.setState({\n        value: '',\n        printAll: false,\n        files: []\n      })\n  }\n\n  handleSubmit(event) {\n    const url = `http://${this.state.node}/query?key=${this.state.key}`;\n    if (this.state.key === '*') {\n      fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const nodes = data.map(n => n.files);\n        const files = nodes.map(n => {\n          const vals = Object.values(n)\n          return vals;\n        })\n\n        console.log(files);\n        this.setState({\n          value: '',\n          files: files,\n          printAll: true\n        })})\n      .catch(exc => console.log(exc))\n    }\n    else {\n      fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          value: data.value,\n          printAll: false,\n          files: []\n        })})\n      .catch(exc => console.log(exc))\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    const nodes = this.props.nodes.map(n => `${n.me.ip}:${n.me.port}`);\n\n    return (\n      <div className='p-3'>\n        <h2>Query</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-group'>\n            <label>Key</label>\n            <br/>\n            <input type=\"text\" value={this.state.key} onChange={this.onKeyChange} />\n            <br/>\n            <label>Node</label>\n            <br/>\n            <select value={this.state.node} onChange={this.onNodeChange}>\n              {nodes.map(node => (\n                <option key={node} value={node}>\n                  {node}\n                </option>\n              ))}\n            </select>\n          </div>\n          <input className='btn btn-primary' type=\"submit\" value=\"Query\" />\n        </form>\n        {\n          this.state.value\n          ?\n          <p className='mt-3'> Value: {this.state.value} </p>\n          :\n          <p>  </p>\n        }\n        {\n          this.state.printAll\n          ?\n          <div>\n            {this.state.files.map((file, ind) => (\n              <div key={ind}>\n                <p> <b>Node {ind}</b> </p>\n                {\n                  file.length\n                  ?\n                  file.map(f =>\n                    <p key={f.name}>\n                      Key: {f.name}<br/>\n                      Value: {f.value}\n                    </p>\n                  )\n                  :\n                  <p> No files </p>\n                }\n              </div>\n            ))}\n            <button className=\"btn btn-primary\" onClick={this.handleClear}>\n              Clear\n            </button>\n            </div>\n          :\n          <p> </p>\n        }\n      </div>\n    );\n  }\n\n}\nexport default Query;\n","import React from 'react';\n\nconst Node = ({node}) => {\n  const files = Object.values(node.files).map(f => ({\n    key: f.name,\n    value: f.value\n  }));\n\n  const replicas = node.replicas.map((r, ind) => {\n    const keys = Object.keys(r);\n    if (keys.length) {\n      const f = keys.map(k => ({\n        key: r[k].name,\n        value: r[k].value\n      }));\n      return f;\n    }\n    else {\n      return [];\n    }\n  })\n\n  return (\n    <div className='mt-2'>\n      <p><b>Files</b>:</p>\n      { files.length\n        ?\n          files.map(f => (\n            <div key={f.key}>\n              <p>\n                Key: {f.key} <br/>\n                Value: {f.value}\n              </p>\n            </div>\n          ))\n        :\n        <p> No files </p>\n      }\n      <p><b>Replicas</b>:</p>\n      {replicas.map((replica, ind) => (\n        <div key={ind}>\n          <p> <b>replica {ind}</b> </p>\n          { replica.length\n            ?\n              replica.map(r =>\n                <p key={r.key}>\n                  Key: {r.key}<br/>\n                  Value: {r.value}\n                </p>\n              )\n\n            :\n            <p> No replicas </p>\n          }\n        </div>\n      ))}\n    </div>\n)};\n\nexport default Node;\n","import React from 'react';\nimport Node from './LogNode';\nimport { base_url } from '../constants';\n\nclass Log extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedNode: base_url,\n      index: 0,\n      log: false,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const node = event.target.value;\n    const [ip, port] = node.split(':');\n    const index = this.props.nodes.findIndex(n => (\n      n.me.ip === ip && n.me.port === parseInt(port)\n    ));\n\n    this.setState({\n      selectedNode: event.target.value,\n      index: index\n    });\n  }\n\n  handleClear(event) {\n      this.setState({log: false});\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      log: true\n    })\n    event.preventDefault();\n  }\n\n  render() {\n    const nodes = this.props.nodes.map(n => `${n.me.ip}:${n.me.port}`);\n    return (\n      <div className='p-3'>\n        <h2>Log</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-group'>\n            <label>Select node</label>\n            <br/>\n            <select value={this.state.selectedNode} onChange={this.handleChange}>\n            {nodes.map((node, index) => (\n              <option key={node} value={node}>\n                {node}\n              </option>\n            ))}\n            </select>\n          </div>\n\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Log\" />\n        </form>\n        {\n          this.state.log\n          ?\n          <div>\n            <Node node={this.props.nodes[this.state.index]}/>\n            <button className=\"btn btn-primary\" onClick={this.handleClear}>\n              Clear\n            </button>\n          </div>\n          :\n          <p> </p>\n\n        }\n      </div>\n    )}\n}\n\nexport default Log;\n","import React from 'react';\nimport { base_url } from '../constants';\n\nclass Delete extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      node: base_url\n    };\n\n    this.onKeyChange = this.onKeyChange.bind(this);\n    this.onNodeChange = this.onNodeChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onKeyChange(event) {\n    this.setState({key: event.target.value});\n  }\n\n  onNodeChange(event) {\n    this.setState({node: event.target.value});\n  }\n\n  handleSubmit(event) {\n    const url = `http://${this.state.node}/delete?key=${this.state.key}`;\n    fetch(url)\n    .then(res => console.log(res))\n    .catch(exc => console.log(exc))\n\n    event.preventDefault();\n  }\n\n  render() {\n    const nodes = this.props.nodes.map(n => `${n.me.ip}:${n.me.port}`);\n    return (\n      <div className='p-3'>\n        <h2>Delete</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-group'>\n            <label>Key</label>\n            <br/>\n            <input type=\"text\" value={this.state.key} onChange={this.onKeyChange} />\n            <br/>\n            <label>Node</label>\n            <br/>\n            <select value={this.state.node} onChange={this.onNodeChange}>\n              {nodes.map(node => (\n                <option key={node} value={node}>\n                  {node}\n                </option>\n              ))}\n            </select>\n          </div>\n          <input className='btn btn-primary' type=\"submit\" value=\"Delete\" />\n        </form>\n      </div>\n    );\n  }\n\n}\nexport default Delete;\n","import React from 'react';\n\nconst Info = (props) => (\n  <div className='p-3'>\n    <h5><b>Number of replicas:</b> {props.K}</h5>\n    <h5><b>Consistency:</b> {props.consistency}</h5>\n  </div>\n);\n\nexport default Info;\n","import React from 'react';\nimport Sketch from 'react-p5'\n\nconst [sizeX, sizeY] = [500, 500];\nconst [centerX, centerY] = [sizeX/2, sizeY/2];\nconst D = 400;\nconst d = 100;\nconst R = D / 2;\n// const r = d / 2;\n\nfunction Topology(props) {\n  if (props.nodes.length) {\n    const nodes = props.nodes.map(n => `${n.me.ip}:${n.me.port}`);\n    const n = nodes.length;\n    const theta = 2 * Math.PI / n;\n\n    const setup = (p5, canvasParentRef) => {\n      p5.createCanvas(sizeX, sizeY).parent(canvasParentRef)\n    }\n\n    const draw = p5 => {\n      p5.background('white');\n      // draw network circle of radius R\n      p5.circle(centerX, centerY, D);\n\n      // draw node circles of radius r\n      let angle = 0;\n      for (let i=0; i<n; i++) {\n        const x = centerX + R * Math.sin(angle);\n        const y = centerY + R * Math.cos(angle);\n        const text = nodes[i];\n        p5.circle(x, y, d);\n        p5.textAlign(p5.CENTER, p5.CENTER);\n        p5.textSize(10);\n        p5.text(text, x, y);\n        angle = angle - theta;\n      }\n    }\n\n    return (\n      <div>\n        <h2 className='text-center'>Network topology</h2>\n        <Sketch setup={setup} draw={draw} />\n        <button className=\"btn btn-primary\" onClick={props.handleReload}>\n          Reload\n        </button>\n      </div>\n      );\n    }\n\n    return (\n      <div>\n        <h2 className='text-center'>Network topology</h2>\n      </div>\n    )\n\n}\n\nexport default Topology;\n","import React from 'react';\nimport Plot from 'react-plotly.js';\nimport BigInt from 'big-integer';\n\nconst PieChart = (props) => {\n  let nodes = [];\n  let labels = [];\n  let values = [];\n  let percentages = [];\n\n  if (props.nodes.length) {\n    nodes = props.nodes.map(n => ({\n      id: BigInt(n.me.id, 16),\n      label: `${n.me.ip}:${n.me.port}`\n    }));\n    nodes = nodes.sort((a, b) => a.id - b.id);\n    labels = nodes.map(n => n.label);\n    const total = BigInt('10000000000000000000000000000000000000000', 16);\n    values = nodes.map(n => n.id);\n    percentages = [];\n    percentages.push((values[0] + total - values[values.length-1])/ total);\n    for (let i=1; i<values.length; i++) {\n      percentages.push((values[i] - values[i-1])/total);\n    }\n  }\n\n  return (\n    <div className='mt-4'>\n      <h2 className='text-center'>Key distribution</h2>\n      <Plot\n        data={[\n        {\n          type: 'pie',\n          values: percentages,\n          labels: labels},\n        ]}\n        layout= {{\n            width: 500,\n            height: 500,\n            paper_bgcolor:\"#FFF0\",\n        }}\n      />\n    </div>\n)};\n\nexport default PieChart;\n","import './App.css';\nimport React from 'react';\nimport { Depart, Insert, Query, Log, Delete, Topology, PieChart, Info } from './components';\nimport { base_url } from './components/constants';\n\nconst LeftHalf = ({nodes, K, consistency}) => (\n  <>\n    <div className='row pt-3'>\n      <div className='col'>\n        <Log nodes={nodes}/>\n      </div>\n      <div className='col'>\n        <Depart nodes={nodes}/>\n      </div>\n    </div>\n    <div className='row pt-3'>\n      <div className='col'>\n        <Query nodes={nodes}/>\n      </div>\n      <div className='col'>\n        <Delete nodes={nodes}/>\n      </div>\n    </div>\n    <div className='row pt-3'>\n      <div className='col'>\n        <Insert nodes={nodes}/>\n      </div>\n      <div className='col'>\n        <Info K={K} consistency={consistency}/>\n      </div>\n    </div>\n  </>\n);\n\nconst RightHalf = ({nodes, handleReload}) => (\n  <>\n    <div className='row'>\n      <Topology nodes={nodes} handleReload={handleReload}/>\n    </div>\n    <div className='row mt-5'>\n      <PieChart nodes={nodes}/>\n    </div>\n  </>\n);\n\nconst fetchInfo = async () => {\n  const res = await fetch(`http://${base_url}/consistency`);\n  const data = await res.json();\n\n  return {\n    K: data.K,\n    consistency: data.consistency\n  };\n}\n\nconst fetchNodes = async () => {\n  const bootstrap = base_url;\n  let next = bootstrap; // start from bootstrap node\n  const nodes = [];\n\n  let cnt = 0; // safety counter\n  while (true) {\n    const url = `http://${next}/log`;\n    const res = await fetch(url);\n    const node = await res.json();\n    nodes.push(node);\n\n    next = `${node.next.ip}:${node.next.port}`;\n    if (next === bootstrap || !nodes) {\n      break;\n    }\n\n    cnt += 1;\n    if (cnt > 10) {\n      console.log(\"Too many nodes to handle...\");\n      break;\n    }\n  }\n  return nodes;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      K: 0,\n      consistency: 'linearizability'\n    }\n    this.handleReload = this.handleReload.bind(this);\n  }\n\n  async componentDidMount() {\n    const {K, consistency} = await fetchInfo();\n    const nodes = await fetchNodes();\n    this.setState({\n      nodes: nodes,\n      K,\n      consistency\n    });\n  }\n\n  async handleReload(event) {\n    const nodes = await fetchNodes();\n    this.setState({\n      nodes: nodes\n    });\n  }\n\n  render() {\n    return (\n      <div className='app container-fluid w-100 d-inline-block'>\n        <h1 className='main-heading text-center mt-4 p-3'>ToyChord</h1>\n        <div className='p-4'>\n          <div className='row'>\n            <div className='col'>\n              <RightHalf nodes={this.state.nodes} handleReload={this.handleReload}/>\n            </div>\n            <div className='col'>\n              <LeftHalf nodes={this.state.nodes} K={this.state.K} consistency={this.state.consistency}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}